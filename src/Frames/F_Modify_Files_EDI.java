/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import Clases.Core.C_ComponentFrame;
import Clases.Core.C_File;
import Clases.Entity.E_File;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author lvaleriano
 */
public class F_Modify_Files_EDI extends javax.swing.JFrame{

    C_ComponentFrame Obj_ComponentFrame = new C_ComponentFrame();
    /**
     * Creates new form F_Modify_Files_EDI
     */
    public F_Modify_Files_EDI() {
        initComponents();
        Obj_ComponentFrame.setEnableJPanelComponentsWithCheckBox(pnlReferencia, chbReferencia);
        //Obj_ComponentFrame.setEnableJPanelComponentsWithCheckBox(pnlUNBUNZ, chbUNBUNZ);
        Obj_ComponentFrame.setEnableJPanelComponentsWithCheckBox(pnlDGS, chbSegmentoDGS);
        Obj_ComponentFrame.setEnableJPanelComponentsWithCheckBox(pnlFTX, chbSegmentoFTX);
        Obj_ComponentFrame.setEnableJPanelComponentsWithCheckBox(pnlDISEMB, chbFecDISEMB);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        pnlReferencia = new javax.swing.JPanel();
        txtReferencia = new javax.swing.JTextField();
        lblReferencia = new javax.swing.JLabel();
        chbTDT20 = new javax.swing.JCheckBox();
        chbRFFVON = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        chbReferencia = new javax.swing.JCheckBox();
        chbUNBUNZ = new javax.swing.JCheckBox();
        btnSelectEDI = new javax.swing.JButton();
        lblPathEDI = new javax.swing.JLabel();
        pnlDGS = new javax.swing.JPanel();
        chbEliminarRepeticionesDGS = new javax.swing.JCheckBox();
        txtNumMaxRepDGS = new javax.swing.JTextField();
        chbNumMaxLinesDGS = new javax.swing.JCheckBox();
        txtNumMaxLinesDGS = new javax.swing.JTextField();
        chbSegmentoDGS = new javax.swing.JCheckBox();
        pnlFTX = new javax.swing.JPanel();
        chbNumMaxLinesFTX = new javax.swing.JCheckBox();
        txtNumMaxRepFTX = new javax.swing.JTextField();
        chbEliminarRepeticionesFTX = new javax.swing.JCheckBox();
        txtNumMaxLinesFTX = new javax.swing.JTextField();
        chbSegmentoFTX = new javax.swing.JCheckBox();
        pnlDISEMB = new javax.swing.JPanel();
        chbFecDis = new javax.swing.JCheckBox();
        chbFecEmb = new javax.swing.JCheckBox();
        txtFecDis = new javax.swing.JTextField();
        txtFecEmb = new javax.swing.JTextField();
        chbFecDISEMB = new javax.swing.JCheckBox();
        lblUNBUNZ = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taMensaje = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        lblNombreNave = new javax.swing.JLabel();
        lblNumViaje = new javax.swing.JLabel();
        txtNombreNave = new javax.swing.JTextField();
        txtNumViaje = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlReferencia.setBorder(javax.swing.BorderFactory.createTitledBorder("Cambiar Referencia"));
        pnlReferencia.setName("pnlReferencia"); // NOI18N

        txtReferencia.setName("txtReferencia"); // NOI18N

        lblReferencia.setText("Texto de referencia :");
        lblReferencia.setName("lblReferencia"); // NOI18N

        chbTDT20.setText("TDT+20");
        chbTDT20.setName("chbTDT20"); // NOI18N

        chbRFFVON.setText("RFF+VON");
        chbRFFVON.setName("chbRFFVON"); // NOI18N

        javax.swing.GroupLayout pnlReferenciaLayout = new javax.swing.GroupLayout(pnlReferencia);
        pnlReferencia.setLayout(pnlReferenciaLayout);
        pnlReferenciaLayout.setHorizontalGroup(
            pnlReferenciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReferenciaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlReferenciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblReferencia)
                    .addComponent(chbTDT20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlReferenciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chbRFFVON)
                    .addComponent(txtReferencia, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlReferenciaLayout.setVerticalGroup(
            pnlReferenciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReferenciaLayout.createSequentialGroup()
                .addGroup(pnlReferenciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtReferencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblReferencia))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(pnlReferenciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chbTDT20)
                    .addComponent(chbRFFVON)))
        );

        jButton1.setText("Modificar EDI");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        chbReferencia.setName("chbReferencia"); // NOI18N
        chbReferencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbReferenciaActionPerformed(evt);
            }
        });

        chbUNBUNZ.setName("chbUNBUNZ"); // NOI18N
        chbUNBUNZ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbUNBUNZActionPerformed(evt);
            }
        });

        btnSelectEDI.setText("Seleccionar EDI");
        btnSelectEDI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectEDIActionPerformed(evt);
            }
        });

        lblPathEDI.setForeground(new java.awt.Color(0, 0, 255));
        lblPathEDI.setText("No ha seleccionado archivo EDI");

        pnlDGS.setBorder(javax.swing.BorderFactory.createTitledBorder("Controlar Segemento DGS"));
        pnlDGS.setName("pnlDGS"); // NOI18N

        chbEliminarRepeticionesDGS.setText("Eliminar repeticiones");
        chbEliminarRepeticionesDGS.setName("chbEliminarRepeticionesDGS"); // NOI18N
        chbEliminarRepeticionesDGS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbEliminarRepeticionesDGSActionPerformed(evt);
            }
        });

        txtNumMaxRepDGS.setName("txtNumMaxRepDGS"); // NOI18N

        chbNumMaxLinesDGS.setText("NÃºmero maximo de lineas :");
        chbNumMaxLinesDGS.setName("chbNumMaxLinesDGS"); // NOI18N
        chbNumMaxLinesDGS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbNumMaxLinesDGSActionPerformed(evt);
            }
        });

        txtNumMaxLinesDGS.setName("txtNumMaxLinesDGS"); // NOI18N

        javax.swing.GroupLayout pnlDGSLayout = new javax.swing.GroupLayout(pnlDGS);
        pnlDGS.setLayout(pnlDGSLayout);
        pnlDGSLayout.setHorizontalGroup(
            pnlDGSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDGSLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDGSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chbEliminarRepeticionesDGS)
                    .addComponent(chbNumMaxLinesDGS))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlDGSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtNumMaxLinesDGS, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                    .addComponent(txtNumMaxRepDGS))
                .addContainerGap())
        );
        pnlDGSLayout.setVerticalGroup(
            pnlDGSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDGSLayout.createSequentialGroup()
                .addGroup(pnlDGSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNumMaxRepDGS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chbEliminarRepeticionesDGS))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlDGSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chbNumMaxLinesDGS)
                    .addComponent(txtNumMaxLinesDGS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        chbSegmentoDGS.setName("chbSegmentoDGS"); // NOI18N
        chbSegmentoDGS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbSegmentoDGSActionPerformed(evt);
            }
        });

        pnlFTX.setBorder(javax.swing.BorderFactory.createTitledBorder("Controlar Segemento FTX"));
        pnlFTX.setName("pnlFTX"); // NOI18N

        chbNumMaxLinesFTX.setText("NÃºmero maximo de lineas :");
        chbNumMaxLinesFTX.setName("chbNumMaxLinesFTX"); // NOI18N
        chbNumMaxLinesFTX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbNumMaxLinesFTXActionPerformed(evt);
            }
        });

        txtNumMaxRepFTX.setName("txtNumMaxRepFTX"); // NOI18N

        chbEliminarRepeticionesFTX.setText("Eliminar repeticiones");
        chbEliminarRepeticionesFTX.setName("chbEliminarRepeticionesFTX"); // NOI18N
        chbEliminarRepeticionesFTX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbEliminarRepeticionesFTXActionPerformed(evt);
            }
        });

        txtNumMaxLinesFTX.setName("txtNumMaxLinesFTX"); // NOI18N

        javax.swing.GroupLayout pnlFTXLayout = new javax.swing.GroupLayout(pnlFTX);
        pnlFTX.setLayout(pnlFTXLayout);
        pnlFTXLayout.setHorizontalGroup(
            pnlFTXLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFTXLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFTXLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chbEliminarRepeticionesFTX)
                    .addComponent(chbNumMaxLinesFTX))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(pnlFTXLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNumMaxLinesFTX, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
                    .addComponent(txtNumMaxRepFTX))
                .addContainerGap())
        );
        pnlFTXLayout.setVerticalGroup(
            pnlFTXLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFTXLayout.createSequentialGroup()
                .addGroup(pnlFTXLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNumMaxRepFTX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chbEliminarRepeticionesFTX))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFTXLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNumMaxLinesFTX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chbNumMaxLinesFTX)))
        );

        chbSegmentoFTX.setName("chbSegmentoFTX"); // NOI18N
        chbSegmentoFTX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbSegmentoFTXActionPerformed(evt);
            }
        });

        pnlDISEMB.setBorder(javax.swing.BorderFactory.createTitledBorder("Cambiar fechas de embarque y descarga :"));
        pnlDISEMB.setName("pnlDISEMB"); // NOI18N

        chbFecDis.setText("Fecha de descarga :");
        chbFecDis.setName("chbFecDis"); // NOI18N
        chbFecDis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbFecDisActionPerformed(evt);
            }
        });

        chbFecEmb.setText("Fecha de embarque :");
        chbFecEmb.setName("chbFecEmb"); // NOI18N
        chbFecEmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbFecEmbActionPerformed(evt);
            }
        });

        txtFecDis.setName("txtFecDis"); // NOI18N
        txtFecDis.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtFecDisInputMethodTextChanged(evt);
            }
        });
        txtFecDis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFecDisActionPerformed(evt);
            }
        });
        txtFecDis.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFecDisKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFecDisKeyTyped(evt);
            }
        });

        txtFecEmb.setName("txtFecEmb"); // NOI18N

        javax.swing.GroupLayout pnlDISEMBLayout = new javax.swing.GroupLayout(pnlDISEMB);
        pnlDISEMB.setLayout(pnlDISEMBLayout);
        pnlDISEMBLayout.setHorizontalGroup(
            pnlDISEMBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDISEMBLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDISEMBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDISEMBLayout.createSequentialGroup()
                        .addComponent(chbFecDis)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtFecDis))
                    .addGroup(pnlDISEMBLayout.createSequentialGroup()
                        .addComponent(chbFecEmb)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFecEmb)))
                .addContainerGap())
        );
        pnlDISEMBLayout.setVerticalGroup(
            pnlDISEMBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDISEMBLayout.createSequentialGroup()
                .addGroup(pnlDISEMBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chbFecDis)
                    .addComponent(txtFecDis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDISEMBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chbFecEmb)
                    .addComponent(txtFecEmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        chbFecDISEMB.setName("chbFecDISEMB"); // NOI18N
        chbFecDISEMB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbFecDISEMBActionPerformed(evt);
            }
        });

        lblUNBUNZ.setText("Sumar unidad a minuto y segundo a UNB-UNZ");
        lblUNBUNZ.setName("lblUNBUNZ"); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Mensaje para correo :"));

        taMensaje.setColumns(20);
        taMensaje.setRows(5);
        jScrollPane1.setViewportView(taMensaje);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 504, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Campos para completar mensaje :"));

        lblNombreNave.setText("Nombre de la Nave :");

        lblNumViaje.setText("NÃºmero de viaje :");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblNombreNave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNombreNave))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblNumViaje)
                        .addGap(18, 18, 18)
                        .addComponent(txtNumViaje)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombreNave)
                    .addComponent(txtNombreNave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNumViaje)
                    .addComponent(txtNumViaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSelectEDI)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPathEDI)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(89, 89, 89)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(chbUNBUNZ)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblUNBUNZ))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(chbReferencia)
                                        .addComponent(chbSegmentoDGS)
                                        .addComponent(chbSegmentoFTX, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addComponent(chbFecDISEMB))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(pnlDISEMB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(pnlDGS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(pnlReferencia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(pnlFTX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(14, 14, 14))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSelectEDI)
                    .addComponent(lblPathEDI, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(chbUNBUNZ)
                            .addComponent(lblUNBUNZ))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chbReferencia)
                            .addComponent(pnlReferencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chbSegmentoDGS)
                            .addComponent(pnlDGS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chbSegmentoFTX)
                            .addComponent(pnlFTX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chbFecDISEMB)
                            .addComponent(pnlDISEMB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chbReferenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbReferenciaActionPerformed
        if(!chbReferencia.isSelected()){
            chbTDT20.setSelected(false);
            chbRFFVON.setSelected(false);
            txtReferencia.setText("");
        }
        Obj_ComponentFrame.setEnableJPanelComponentsWithCheckBox(pnlReferencia, chbReferencia);
    }//GEN-LAST:event_chbReferenciaActionPerformed

    private void chbUNBUNZActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbUNBUNZActionPerformed
        //Obj_ComponentFrame.setEnableJPanelComponentsWithCheckBox(pnlUNBUNZ, chbUNBUNZ);
    }//GEN-LAST:event_chbUNBUNZActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            C_File OC_File = new C_File();
            E_File OE_File = new E_File();
            List ArrayNumOfSectionUNHUNTbyArchive = new ArrayList();
            OC_File.CreateObjectOfArchiveReadyToRead(OE_File, lblPathEDI.getText());
            String Resultado="";
            String Accion = "";
            String Linea;
            int originalNumLinesDGS = 0;
            int originalNumLinesFTX = 0;
            int numLinesInArchive = 0;
            int countNumArchives = 1;
            int numOfSectionUNHUNTbyArchive = 0;
            String LineUNB = "";
            /*String MensajeCorreo = "Estimada,\n\n"+
                                   "EnvÃ­o archivo COARRI  para la nave "+txtNombreNave.getText()+" "+txtNumViaje.getText()+". El Nro. de referencia de los movimientos de embarque y descarga es : "+txtReferencia.getText()+"\n\n"+
                                   "Fecha de embarque :\t"+(OC_File.FormatOfDateYYYY_MM_DD_HH_SS(txtFecEmb.getText())?)+"\n"+
                                   "Fecha de descarga :\t"+txtFecDis.getText();
            */                       
            int NumOfBackSlash = OC_File.CountCharacterInText(lblPathEDI.getText(), '\\');
            File directorio = new File(OC_File.GetTextFromOneCharterToAnother(lblPathEDI.getText(),"", 1, "\\", NumOfBackSlash, true)+"\\"+OC_File.GetTextFromOneCharterToAnother(lblPathEDI.getText(),".", 1, "\\", 1, false));
            directorio.mkdir();
            OC_File.CreateObjectOfArchiveToWrite(OE_File, OC_File.GetTextFromOneCharterToAnother(directorio.getPath(),"", 1, ".", 1, true)+"\\"+OC_File.GetTextFromOneCharterToAnother(lblPathEDI.getText(),".", 1, "\\", 1, false)+"_RESULT_"+countNumArchives+".edi", false);
            //Leemos la primera linea
            if((Linea = OE_File.getBr().readLine())!=null){
                if(chbUNBUNZ.isSelected()){
                    LineUNB = Linea;
                    Linea = OC_File.ReturnLineUNBaddDeterminateMinuteAndSecond(Linea, countNumArchives);
                }
                OE_File.getPw().println(Linea);
                numLinesInArchive++;
            }
            while((Linea=OE_File.getBr().readLine())!=null){
                if(OC_File.TextStartWith(Linea,"UNH")){
                    Resultado="";
                }
                if(OC_File.TextStartWith(Linea,"BGM") && (chbFecDis.isSelected() || chbFecEmb.isSelected())){
                    if(OC_File.TextStartWith(Linea,"BGM+270")){
                        Accion = "LOAD";
                    }
                    if(OC_File.TextStartWith(Linea,"BGM+98")){
                        Accion = "DISCHARGE";
                    }
                }
                if(OC_File.TextStartWith(Linea,"TDT+20")){ 
                    if(chbReferencia.isSelected() && chbTDT20.isSelected()){
                        Linea = OC_File.DelimitedReplaceCaractersInText(Linea,"TDT+20+","+",txtReferencia.getText());
                    }
                }
                if(OC_File.TextStartWith(Linea,"RFF+VON")){
                    if(chbReferencia.isSelected() && chbRFFVON.isSelected()){
                        Linea = OC_File.DelimitedReplaceCaractersInText(Linea,"RFF+VON:","'",txtReferencia.getText());
                    }
                }
                if(OC_File.TextStartWith(Linea,"DTM+203") && (chbFecDis.isSelected() || chbFecEmb.isSelected())){
                    switch (Accion){
                        case "LOAD":
                            Linea = Linea.replace(OC_File.GetTextFromOneCharterToAnother(Linea, ":", 1, ":", 1, true),txtFecEmb.getText());
                            break;
                        case "DISCHARGE":
                            Linea = Linea.replace(OC_File.GetTextFromOneCharterToAnother(Linea, ":", 1, ":", 1, true),txtFecDis.getText());
                            break;
                        default:
                            break;
                    }
                }
                if(OC_File.TextStartWith(Linea,"UNT")){
                    Resultado+=Linea;
                    if(chbSegmentoDGS.isSelected()){
                        String TextReplaceDGS;
                        originalNumLinesDGS = OC_File.CountTextAtStartLineInBlockTextDelimited(Resultado, "DGS", ';');
                        if(chbEliminarRepeticionesDGS.isSelected() && OC_File.CountTextAtStartLineInBlockTextDelimited(Resultado, "DGS", ';') > (txtNumMaxRepDGS.getText().equals("")?0:Integer.parseInt(txtNumMaxRepDGS.getText()))){
                            TextReplaceDGS = OC_File.GetTextAtStartLineInBlockTextDelimited(Resultado, "DGS", ';');
                            if(txtNumMaxRepDGS.getText().equals("") || txtNumMaxRepDGS.getText().equals("0")){
                                TextReplaceDGS = OC_File.DeleteDuplicateLinesToMinimumOfThem(TextReplaceDGS, ';', 0, false);
                            }else{
                                TextReplaceDGS = OC_File.DeleteDuplicateLinesToMinimumOfThem(TextReplaceDGS, ';', Integer.parseInt(txtNumMaxRepDGS.getText()), false);
                            }
                            Resultado = Resultado.replace(OC_File.GetTextAtStartLineInBlockTextDelimited(Resultado, "DGS", ';'), TextReplaceDGS);
                        }
                        if(chbNumMaxLinesDGS.isSelected() && OC_File.CountTextAtStartLineInBlockTextDelimited(Resultado, "DGS", ';') > (txtNumMaxLinesDGS.getText().equals("")?0:Integer.parseInt(txtNumMaxLinesDGS.getText()))){
                            TextReplaceDGS = OC_File.GetTextAtStartLineInBlockTextDelimited(Resultado, "DGS", ';');
                            if(txtNumMaxLinesDGS.getText().equals("") || txtNumMaxLinesDGS.getText().equals("0")){
                                TextReplaceDGS = OC_File.DeleteLinesToMinimumOfThem(TextReplaceDGS, ';', 0, false);
                            }else{
                                TextReplaceDGS = OC_File.DeleteLinesToMinimumOfThem(TextReplaceDGS, ';', Integer.parseInt(txtNumMaxLinesDGS.getText()), false);
                            }
                            Resultado = Resultado.replace(OC_File.GetTextAtStartLineInBlockTextDelimited(Resultado, "DGS", ';'), TextReplaceDGS);
                        }
                    }
                    if(chbSegmentoFTX.isSelected()){
                        String TextReplaceFTX;
                        originalNumLinesFTX = OC_File.CountTextAtStartLineInBlockTextDelimited(Resultado, "FTX", ';');
                        if(chbEliminarRepeticionesFTX.isSelected() && OC_File.CountTextAtStartLineInBlockTextDelimited(Resultado, "FTX", ';') > (txtNumMaxRepFTX.getText().equals("")?0:Integer.parseInt(txtNumMaxRepFTX.getText()))){
                            TextReplaceFTX = OC_File.GetTextAtStartLineInBlockTextDelimited(Resultado, "FTX", ';');
                            if(txtNumMaxRepFTX.getText().equals("") || txtNumMaxRepFTX.getText().equals("0")){
                                TextReplaceFTX = OC_File.DeleteDuplicateLinesToMinimumOfThem(TextReplaceFTX, ';', 0, false);
                            }else{
                                TextReplaceFTX = OC_File.DeleteDuplicateLinesToMinimumOfThem(TextReplaceFTX, ';', Integer.parseInt(txtNumMaxRepFTX.getText()), false);
                            }
                            Resultado = Resultado.replace(OC_File.GetTextAtStartLineInBlockTextDelimited(Resultado, "FTX", ';'), TextReplaceFTX);
                        }
                        if(chbNumMaxLinesFTX.isSelected() && OC_File.CountTextAtStartLineInBlockTextDelimited(Resultado, "FTX", ';') > (txtNumMaxLinesFTX.getText().equals("")?0:Integer.parseInt(txtNumMaxLinesFTX.getText()))){
                            TextReplaceFTX = OC_File.GetTextAtStartLineInBlockTextDelimited(Resultado, "FTX", ';');
                            if(txtNumMaxLinesFTX.getText().equals("") || txtNumMaxLinesFTX.getText().equals("0")){
                                TextReplaceFTX = OC_File.DeleteLinesToMinimumOfThem(TextReplaceFTX, ';', 0, false);
                            }else{
                                TextReplaceFTX = OC_File.DeleteLinesToMinimumOfThem(TextReplaceFTX, ';', Integer.parseInt(txtNumMaxLinesFTX.getText()), false);
                            }
                            Resultado = Resultado.replace(OC_File.GetTextAtStartLineInBlockTextDelimited(Resultado, "FTX", ';'), TextReplaceFTX);
                        }
                    }
                    if(originalNumLinesDGS > (chbSegmentoDGS.isSelected()?OC_File.CountTextAtStartLineInBlockTextDelimited(Resultado, "DGS", ';'):0) || originalNumLinesFTX > (chbSegmentoFTX.isSelected()?OC_File.CountTextAtStartLineInBlockTextDelimited(Resultado, "FTX", ';'):0)){
                        int difNumLinesDGSFTX = (originalNumLinesDGS - (chbSegmentoDGS.isSelected()?OC_File.CountTextAtStartLineInBlockTextDelimited(Resultado, "DGS", ';'):0)) + (originalNumLinesFTX - (chbSegmentoFTX.isSelected()?OC_File.CountTextAtStartLineInBlockTextDelimited(Resultado, "FTX", ';'):0));
                        String LastLineUNT = OC_File.GetTextAtStartLineInBlockTextDelimited(Resultado, "UNT", ';');
                        String NewLineUNT = LastLineUNT.replace(OC_File.GetTextFromOneCharterToAnother(LastLineUNT, "+", 1, "+", 1, true), OC_File.AddToInteger(OC_File.GetTextFromOneCharterToAnother(LastLineUNT, "+", 1, "+", 1, true), -difNumLinesDGSFTX));
                        Resultado = Resultado.replace(LastLineUNT, NewLineUNT);
                    }
                    int countLinesBetweenUNHUNT = OC_File.CountCharacterInText(Resultado, ';') + 1;
                    if( numLinesInArchive + countLinesBetweenUNHUNT > 2999){
                        OE_File.getFw().close();
                        countNumArchives++;
                        OC_File.CreateObjectOfArchiveToWrite(OE_File, OC_File.GetTextFromOneCharterToAnother(directorio.getPath(),"", 1, ".", 1, true)+"\\"+OC_File.GetTextFromOneCharterToAnother(lblPathEDI.getText(),".", 1, "\\", 1, false)+"_RESULT_"+countNumArchives+".edi", false);
                        OE_File.getPw().println(OC_File.ReturnLineUNBaddDeterminateMinuteAndSecond(LineUNB, countNumArchives));
                        numLinesInArchive = 1;
                        ArrayNumOfSectionUNHUNTbyArchive.add(numOfSectionUNHUNTbyArchive);
                        numOfSectionUNHUNTbyArchive = 0;
                    }
                    OC_File.MultilaneWriteArchive(OE_File.getPw(), Resultado, ';');
                    numOfSectionUNHUNTbyArchive++;
                    numLinesInArchive += countLinesBetweenUNHUNT;
                }
                else{
                    Resultado+=Linea+";";
                }
                if(OC_File.TextStartWith(Linea,"UNZ")){
                    String[] ListOfArchiveCreated = directorio.list();
                    if(ListOfArchiveCreated == null){
                        JOptionPane.showMessageDialog(null,"No se encontro ningun archivo en el directorio " + directorio.getPath(), "Resultado", JOptionPane.INFORMATION_MESSAGE);
                    }else{
                        for(int i = 0; i < ListOfArchiveCreated.length; i++){
                            if(ListOfArchiveCreated.length-1 == i){
                                ArrayNumOfSectionUNHUNTbyArchive.add(numOfSectionUNHUNTbyArchive);
                            }
                            OE_File.getFw().close();
                            OC_File.CreateObjectOfArchiveToWrite(OE_File, OC_File.GetTextFromOneCharterToAnother(directorio.getPath(),"", 1, ".", 1, true)+"\\"+ListOfArchiveCreated[i], true);
                            if(chbUNBUNZ.isSelected()){
                                String secondsUNZ = OC_File.AddToInteger(OC_File.GetTextFromOneCharterToAnother(Linea,"'",1,"+",1,false),i+1);
                                OE_File.getPw().println(OC_File.GetTextFromOneCharterToAnother(Linea,"",1,"+",1,true)+"+"+ArrayNumOfSectionUNHUNTbyArchive.get(i)+"+"+secondsUNZ+"'");
                            }else{
                                OE_File.getPw().println(OC_File.GetTextFromOneCharterToAnother(Linea,"",1,"+",1,true)+"+"+ArrayNumOfSectionUNHUNTbyArchive.get(i)+"+"+OC_File.GetTextFromOneCharterToAnother(Linea,"",1,"+",1,false));
                            }
                        }
                    }
                }
            }
            OE_File.getFr().close();
            OE_File.getFw().close();
            //taMensaje.setText(MensajeCorreo);
            JOptionPane.showMessageDialog(null,"Se Genero Exitosamente el archivo resultante", "Resultado", JOptionPane.INFORMATION_MESSAGE);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null,"Se produjo un error en la generacion del archivo resultante. "+ ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnSelectEDIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectEDIActionPerformed
        // TODO add your handling code here:
        
        JFileChooser chosser = new JFileChooser();
        int returnVal = chosser.showOpenDialog(this);
        if(returnVal == JFileChooser.APPROVE_OPTION){
            File myFile = chosser.getSelectedFile();
            String FilePath = myFile.getPath();
            lblPathEDI.setText(FilePath);
        }
    }//GEN-LAST:event_btnSelectEDIActionPerformed

    private void chbSegmentoDGSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbSegmentoDGSActionPerformed
        if(chbSegmentoDGS.isSelected()){
            Obj_ComponentFrame.setEnableJPanelComponentsWithCheckBox(pnlDGS, chbSegmentoDGS,"txtNumMaxLinesDGS","txtNumMaxRepDGS");
        }else{
            chbNumMaxLinesDGS.setSelected(false);
            chbEliminarRepeticionesDGS.setSelected(false);
            txtNumMaxLinesDGS.setText("");
            txtNumMaxRepDGS.setText("");
            Obj_ComponentFrame.setEnableJPanelComponentsWithCheckBox(pnlDGS, chbSegmentoDGS);
        }
    }//GEN-LAST:event_chbSegmentoDGSActionPerformed

    private void chbNumMaxLinesDGSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbNumMaxLinesDGSActionPerformed
        if(chbNumMaxLinesDGS.isSelected()){
           txtNumMaxLinesDGS.setEnabled(true);
        }else{
           if(!txtNumMaxLinesDGS.getText().equals("")){
               txtNumMaxLinesDGS.setText("");
           }
           txtNumMaxLinesDGS.setEnabled(false);
        }
    }//GEN-LAST:event_chbNumMaxLinesDGSActionPerformed

    private void chbNumMaxLinesFTXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbNumMaxLinesFTXActionPerformed
        if(chbNumMaxLinesFTX.isSelected()){
           txtNumMaxLinesFTX.setEnabled(true);
        }else{
           if(!txtNumMaxLinesFTX.getText().equals("")){
               txtNumMaxLinesFTX.setText("");
           }
           txtNumMaxLinesFTX.setEnabled(false);
        }
    }//GEN-LAST:event_chbNumMaxLinesFTXActionPerformed

    private void chbSegmentoFTXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbSegmentoFTXActionPerformed
        if(chbSegmentoFTX.isSelected()){
            Obj_ComponentFrame.setEnableJPanelComponentsWithCheckBox(pnlFTX, chbSegmentoFTX,"txtNumMaxLinesFTX","txtNumMaxRepFTX");
        }else{
            chbNumMaxLinesFTX.setSelected(false);
            chbEliminarRepeticionesFTX.setSelected(false);
            txtNumMaxLinesFTX.setText("");
            txtNumMaxRepFTX.setText("");
            Obj_ComponentFrame.setEnableJPanelComponentsWithCheckBox(pnlFTX, chbSegmentoFTX);
        }
    }//GEN-LAST:event_chbSegmentoFTXActionPerformed

    private void chbEliminarRepeticionesDGSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbEliminarRepeticionesDGSActionPerformed
        if(chbEliminarRepeticionesDGS.isSelected()){
           txtNumMaxRepDGS.setEnabled(true);
        }else{
           if(!txtNumMaxRepDGS.getText().equals("")){
               txtNumMaxRepDGS.setText("");
           }
           txtNumMaxRepDGS.setEnabled(false);
        }
    }//GEN-LAST:event_chbEliminarRepeticionesDGSActionPerformed

    private void chbEliminarRepeticionesFTXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbEliminarRepeticionesFTXActionPerformed
        if(chbEliminarRepeticionesFTX.isSelected()){
           txtNumMaxRepFTX.setEnabled(true);
        }else{
           if(!txtNumMaxRepFTX.getText().equals("")){
               txtNumMaxRepFTX.setText("");
           }
           txtNumMaxRepFTX.setEnabled(false);
        }
    }//GEN-LAST:event_chbEliminarRepeticionesFTXActionPerformed

    private void chbFecDISEMBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbFecDISEMBActionPerformed
        if(chbFecDISEMB.isSelected()){
            Obj_ComponentFrame.setEnableJPanelComponentsWithCheckBox(pnlDISEMB, chbFecDISEMB, "txtFecDis","txtFecEmb");
        }else{
            chbFecDis.setSelected(false);
            chbFecEmb.setSelected(false);
            txtFecDis.setText("");
            txtFecEmb.setText("");
            Obj_ComponentFrame.setEnableJPanelComponentsWithCheckBox(pnlDISEMB, chbFecDISEMB);
        }
    }//GEN-LAST:event_chbFecDISEMBActionPerformed

    private void chbFecDisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbFecDisActionPerformed
        if(chbFecDis.isSelected()){
           txtFecDis.setEnabled(true);
        }else{
           if(!txtFecDis.getText().equals("")){
               txtFecDis.setText("");
           }
           txtFecDis.setEnabled(false);
        }
    }//GEN-LAST:event_chbFecDisActionPerformed

    private void chbFecEmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbFecEmbActionPerformed
        if(chbFecEmb.isSelected()){
           txtFecEmb.setEnabled(true);
        }else{
           if(!txtFecEmb.getText().equals("")){
               txtFecEmb.setText("");
           }
           txtFecEmb.setEnabled(false);
        }
    }//GEN-LAST:event_chbFecEmbActionPerformed

    private void txtFecDisInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtFecDisInputMethodTextChanged
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null,"Si ingreso", "Resultado", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_txtFecDisInputMethodTextChanged

    private void txtFecDisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFecDisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFecDisActionPerformed

    private void txtFecDisKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFecDisKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFecDisKeyPressed

    private void txtFecDisKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFecDisKeyTyped
        // TODO add your handling code here:
        if(!txtFecDis.getText().equals("")){
            switch (txtFecDis.getText().length()){
                case 4: 
                    txtFecDis.setText(txtFecDis.getText()+"-");
                    break;
                case 7: 
                    txtFecDis.setText(txtFecDis.getText()+"-");
                    break;
                case 10: 
                    txtFecDis.setText(txtFecDis.getText()+" ");
                    break;
                case 13: 
                    txtFecDis.setText(txtFecDis.getText()+":");
                    break;
            }
            /*
            if (txtFecDis.getText().length() >= 4){
                if(txtFecDis.getText().length() == 4){
                    txtFecDis.setText(txtFecDis.getText()+"-");
                }else{
                    txtFecDis.setText(txtFecDis.getText().substring(0, 5)+"-"+txtFecDis.getText().substring(5));
                }
            }
            if (txtFecDis.getText().length() >= 7){
                if(txtFecDis.getText().length() == 7){
                    txtFecDis.setText(txtFecDis.getText()+"-");
                }else{
                    txtFecDis.setText(txtFecDis.getText().substring(0, 8)+"-"+txtFecDis.getText().substring(8));
                }
            }
            if (txtFecDis.getText().length() >= 10){
                if(txtFecDis.getText().length() == 10){
                    txtFecDis.setText(txtFecDis.getText()+" ");
                }else{
                    txtFecDis.setText(txtFecDis.getText().substring(0, 11)+" "+txtFecDis.getText().substring(11));
                }
            }
            if (txtFecDis.getText().length() >= 13){
                if(txtFecDis.getText().length() == 13){
                    txtFecDis.setText(txtFecDis.getText()+":");
                }else{
                    txtFecDis.setText(txtFecDis.getText().substring(0, 14)+":"+txtFecDis.getText().substring(14));
                }
            }
            */
        }
    }//GEN-LAST:event_txtFecDisKeyTyped
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(F_Modify_Files_EDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(F_Modify_Files_EDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(F_Modify_Files_EDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(F_Modify_Files_EDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new F_Modify_Files_EDI().setVisible(true);
                
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSelectEDI;
    private javax.swing.JCheckBox chbEliminarRepeticionesDGS;
    private javax.swing.JCheckBox chbEliminarRepeticionesFTX;
    private javax.swing.JCheckBox chbFecDISEMB;
    private javax.swing.JCheckBox chbFecDis;
    private javax.swing.JCheckBox chbFecEmb;
    private javax.swing.JCheckBox chbNumMaxLinesDGS;
    private javax.swing.JCheckBox chbNumMaxLinesFTX;
    private javax.swing.JCheckBox chbRFFVON;
    private javax.swing.JCheckBox chbReferencia;
    private javax.swing.JCheckBox chbSegmentoDGS;
    private javax.swing.JCheckBox chbSegmentoFTX;
    private javax.swing.JCheckBox chbTDT20;
    private javax.swing.JCheckBox chbUNBUNZ;
    private javax.swing.JButton jButton1;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblNombreNave;
    private javax.swing.JLabel lblNumViaje;
    private javax.swing.JLabel lblPathEDI;
    private javax.swing.JLabel lblReferencia;
    private javax.swing.JLabel lblUNBUNZ;
    private javax.swing.JPanel pnlDGS;
    private javax.swing.JPanel pnlDISEMB;
    private javax.swing.JPanel pnlFTX;
    private javax.swing.JPanel pnlReferencia;
    private javax.swing.JTextArea taMensaje;
    private javax.swing.JTextField txtFecDis;
    private javax.swing.JTextField txtFecEmb;
    private javax.swing.JTextField txtNombreNave;
    private javax.swing.JTextField txtNumMaxLinesDGS;
    private javax.swing.JTextField txtNumMaxLinesFTX;
    private javax.swing.JTextField txtNumMaxRepDGS;
    private javax.swing.JTextField txtNumMaxRepFTX;
    private javax.swing.JTextField txtNumViaje;
    private javax.swing.JTextField txtReferencia;
    // End of variables declaration//GEN-END:variables
}